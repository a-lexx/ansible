---
- name: install packages
  apt:
    pkg: ['curl', 'openssl', 'screen', 'socat']
    state: latest
    update_cache: true

- name: create user {{ USER }}
  user:
    name: "{{ USER }}"
    shell: /bin/bash
    create_home: yes
    home: "/home/{{ USER }}"
    generate_ssh_key: yes
    ssh_key_type: ecdsa
    ssh_key_bits: 384
  ignore_errors: true

- name: create screenrc
  template:
    src: screenrc.j2
    dest: "/home/{{ USER }}/.screenrc"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    mode: 0644

- name: nopassword for user systemctl command
  lineinfile:
    dest: /etc/sudoers.d/{{ USER }}
    create: yes
    regexp: '^{{ USER }} ALL\='
    line: "{{ USER }} ALL=(ALL:ALL) NOPASSWD:/usr/bin/systemctl"
    validate: 'visudo -cf %s'

- name: create bin directory in {{ USER }} home
  file:
    path: '/home/{{ USER }}/{{ item }}'
    state: directory
    owner: "{{ USER }}"
    group: "{{ USER }}"
    mode: 0755
  with_items:
    - .acme.sh
    - bin
    - letsencrypt
    - .log/screen/

- name: download acme.sh
  get_url:
    url: https://raw.githubusercontent.com/Neilpang/acme.sh/master/acme.sh
    dest: "/home/{{ USER }}/.acme.sh/"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    mode: 0755

- name: add env to bashrc
  blockinfile:
    path: "/home/{{ USER }}/.bashrc"
    create: yes
    block: |
      # include bash completion
      if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
          . /etc/bash_completion
      fi
      # set primary prompt variable
      PS1='\[\e[1;36m\][\A]\[\e[1;34m\]\u@\[\e[1;33m\]\H:\[\e[1;36m\]\w\$\[\e[0m\] '
      # exports
      export EDITOR=/usr/bin/vim
      export PAGER=/usr/bin/less
      export LE_WORKING_DIR="/home/runner/.acme.sh"
      alias acme.sh="/home/runner/.acme.sh/acme.sh"
      # history
      HISTCONTROL=ignoredups
      HISTCONTROL=ignorespace
      HISTCONTROL=erasedups
      shopt -s histappend
      PROMPT_COMMAND='history -a'

- name: create link to script
  file:
    src: "/home/{{ USER }}/.acme.sh/acme.sh"
    dest: "/home/{{ USER }}/bin/acme.sh"
    state: link
    force: yes
    mode: 0750

- name: renew script create
  template:
    src: renew.j2
    dest: "/home/{{ USER }}/bin/renew.sh"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    mode: 0775

- name: add cron job
  cron:
    name: renew certificates
    minute: "34"
    hour: "0"
    job: "/home/runner/bin/renew.sh"
    user: "{{ USER }}"

- name: create cert directorys
  file:
    path: '{{ item }}'
    state: directory
    owner: "{{ USER }}"
    group: "{{ USER }}"
    mode: 0755
  with_items:
    - /etc/nginx/certs
    - /etc/nginx/certs/{{ FQDN }}
    - /etc/apache2/certs
    - /etc/apache2/certs/{{ FQDN }}

- name: create Diffie-Helman key
  openssl_dhparam:
    path: /etc/nginx/certs/dhparam.pem
    size: 2048

- name: create link to script
  file:
    src: /etc/nginx/certs/dhparam.pem
    dest: /etc/apache2/certs/dhparam.pem
    state: link
    mode: 0750

- name: acme in nginx
  template:
    src: acme.j2
    dest: /etc/nginx/le.conf
    mode: 0600
  notify:
    - reload nginx

- name: acme in apache2
  template:
    src: le.j2
    dest: /etc/apache2/conf-available/le.conf
    mode: 0600
  notify:
    - reload apache

- name: enable le.conf
  file:
    src: ../conf-available/le.conf
    dest: /etc/apache2/conf-enabled/le.conf
    state: link
    mode: 0750

