---
- name: Include role
  ansible.builtin.import_tasks: crypt.yaml
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"
  ignore_errors: true
- name: Add hostname on remote host
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    line: "127.0.1.1\t{{ hostname }}"
- name: Set root passwd
  ansible.builtin.user:
    name: root
    shell: /bin/bash
    password: "{{ pwroot }}"
    generate_ssh_key: true
    state: present
- name: Change /etc/apt/sources.list
  ansible.builtin.template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
- name: Install packages
  ansible.builtin.apt:
    pkg: ['cryptsetup', 'asterisk']
    state: present
    install_recommends: false
    update_cache: true
- name: Add ~/.bashrc
  ansible.builtin.template:
    src: bashrc_root.j2
    dest: /root/.bashrc
    mode: 0600
- name: Add ~/.vimrc
  ansible.builtin.template:
    src: vimrc.j2
    dest: /root/.vimrc
    mode: 0600
- name: Add pub key
  ansible.builtin.template:
    src: pub.j2
    dest: /root/.ssh/authorized_keys
- name: Disable history
  ansible.builtin.lineinfile:
    dest: /root/.profile
    line: "unset HISTFILE"
    insertbefore: "mesg n"
- name: Del history
  ansible.builtin.file:
    path: /root/.bash_history
    state: absent
  ignore_errors: true
- name: Packages purge
  ansible.builtin.apt:
    pkg: ['exim4-config', 'portmap', 'rpcbind', 'apache2', 'postfix', 'cups', 'unbound', 'dovecot-*', 'spamassassin', 'samba', 'vsftpd', 'mysql-server']
    state: absent
- name: Disable autostart on boot
  ansible.builtin.systemd:
    enabled: false
    name: asterisk
    state: stopped
    masked: false
- name: Set iax.conf
  ansible.builtin.template:
    src: iax.j2
    dest: /etc/asterisk/iax.conf
    mode: 0640
    backup: true
    owner: asterisk
    group: asterisk
- name: Set sip.conf
  ansible.builtin.template:
    src: sip.j2
    dest: /etc/asterisk/sip.conf
    mode: 0640
    backup: true
    owner: asterisk
    group: asterisk
- name: Disable cdr_radius
  ansible.builtin.lineinfile:
    dest: /etc/asterisk/modules.conf
    line: 'noload => cdr_radius.so'
    regexp: '^noload => cdr_radius\.so'
    insertafter: 'autoload='
- name: Set extensions.conf
  ansible.builtin.template:
    src: extensions.j2
    dest: /etc/asterisk/extensions.conf
    mode: '0640'
    backup: true
    owner: asterisk
    group: asterisk
- name: Set extensions.ael
  ansible.builtin.template:
    src: extensions_ael.j2
    dest: /etc/asterisk/extensions.ael
    mode: 0640
    backup: true
    owner: asterisk
    group: asterisk
  notify:
    - reload asterisk
- name: Nrpe_local.conf
  ansible.builtin.template:
    src: nrpe_voip.j2
    dest: /etc/nagios/nrpe_local.cfg
  notify:
    - reload nagios-nrpe-server
- name: Rsyslog block
  block:
    - name: Install rsyslog
      ansible.builtin.apt:
        pkg: rsyslog
        state: present
        install_recommends: false
    - name: Create conf rsyslog
      ansible.builtin.blockinfile:
        path: /etc/rsyslog.conf
        backup: true
        insertafter: "WorkDirectory"
        marker: "# {mark} Fixes for ram"
        block: |
          $QueueType Disk
          $QueueMaxFileSize 1m
      notify:
        - reload rsyslog
- name: Interfaces
  ansible.builtin.debug:
    msg: address is {{ ansible_default_ipv4.address }}
- name: Configuration VoIP server
  block:
    - name: Install openvpn package
      ansible.builtin.apt:
        name: openvpn
        state: present
        install_recommends: false
    - name: Create certs directory
      ansible.builtin.file:
        path: /etc/openvpn/certs
        state: directory
        mode: '0755'
    - name: Update owner of directory
      ansible.builtin.file:
        path: /errata/var/log/asterisk
        state: directory
        mode: '0755'
        owner: asterisk
        group: asterisk
    - name: Create directories on main server
      ansible.builtin.file:
        path: /etc/systemd/system/openvpn@client_udp.service.d
        state: directory
        mode: '0755'
      when: server_env is defined and server_env == "main"
    - name: Create override.conf on main server
      ansible.builtin.template:
        src: ovpn_voip_override.j2
        dest: /etc/systemd/system/openvpn@client_udp.service.d/override.conf
      when: server_env is defined and server_env == "main"
    - name: Create openvpn config on main server
      ansible.builtin.template:
        src: ovpn_udp.j2
        dest: /etc/openvpn/client_udp.conf
      when: server_env is defined and server_env == "main"
    - name: Create directories on reserv server
      ansible.builtin.file:
        path: /etc/systemd/system/openvpn@client_tcp.service.d
        state: directory
        mode: '0755'
      when: server_env is defined and server_env == "reserv"
    - name: Create override.conf on reserv server
      ansible.builtin.template:
        src: ovpn_voip_override.j2
        dest: /etc/systemd/system/openvpn@client_tcp.service.d/override.conf
      when: server_env is defined and server_env == "reserv"
    - name: Create openvpn config on reserv server
      ansible.builtin.template:
        src: ovpn_tcp.j2
        dest: /etc/openvpn/client_tcp.conf
      when: server_env is defined and server_env == "reserv"
    - name: Configure nrpe
      ansible.legacy.include_tasks: Nrpe.yml
      tags: nrpe
    - name: Configure firewall
      ansible.legacy.include_tasks: firewall.yml
      tags: firewall
    - name: Add cron tasks
      ansible.legacy.include_tasks: cron.yml
      tags: cron
